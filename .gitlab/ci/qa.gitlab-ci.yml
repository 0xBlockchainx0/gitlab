.package-and-qa-base:
  extends: .default-only
  image: ruby:2.6-alpine
  stage: qa
  dependencies: []
  retry: 0
  script:
    - source scripts/utils.sh
    - install_gitlab_gem
    - ./scripts/trigger-build omnibus
  only:
    variables:
      - $CI_SERVER_HOST == "gitlab.com" && $CI_PROJECT_NAMESPACE =~ /^gitlab-org($|\/)/  # Matches the gitlab-org group or its subgroups

package-and-qa-manual:
  extends:
    - .package-and-qa-base
    - .only-code-changes
  except:
    refs:
      - master
  when: manual
  needs: ["build-qa-image", "gitlab:assets:compile pull-cache"]

package-and-qa:
  extends:
    - .package-and-qa-base
    - .only-qa-changes
  except:
    refs:
      - master
  needs: ["build-qa-image", "gitlab:assets:compile pull-cache"]
  allow_failure: true

.schedules:
  only:
    refs:
      - schedules@gitlab-org/gitlab
      - schedules@gitlab-org/gitlab-foss

schedule:package-and-qa:
  extends:
    - .package-and-qa-base
    - .only-code-qa-changes
    - .schedules
  needs: ["build-qa-image", "gitlab:assets:compile"]
  allow_failure: true

.notify:
  image: alpine
  stage: qa
  dependencies: []
  cache: {}
  before_script:
    - apk update && apk add git curl bash

schedule:package-and-qa:notify-success:
  extends:
    - .schedules
    - .notify
  script:
    - bin/slack qa-master "üéâ Scheduled QA against `master` passed! üéâ See $CI_PIPELINE_URL." ci_passing
  when: on_success

schedule:package-and-qa:notify-failure:
  extends:
    - .schedules
    - .notify
  script:
    - bin/slack qa-master "‚ò†Ô∏è Scheduled QA against `master` failed! ‚ò†Ô∏è See $CI_PIPELINE_URL." ci_failing
  when: on_failure
