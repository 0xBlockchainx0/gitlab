- import_data = f.object
- regen_data = { auth_method: 'ssh_public_key', regenerate_ssh_private_key: true }
- ssh_key_auth = import_data.ssh_key_auth?
- ssh_public_key_present = import_data.ssh_public_key.present?

.form-group
  = f.label :auth_method, _('Authentication method'), class: 'label-bold'
  = f.select :auth_method,
      options_for_select([[_('Password'), 'password'], [_('SSH public key'), 'ssh_public_key']], import_data.auth_method),
      {}, { class: "form-control js-pull-mirror-auth-type" }

.form-group
  .collapse.js-well-changing-auth
    .changing-auth-method= icon('spinner spin lg')
  .well-password-auth.collapse.js-well-password-auth
    = f.label :password, _("Password"), class: "label-bold"
    = f.password_field :password, value: import_data.password, class: 'form-control'
  .well-ssh-auth.collapse.js-well-ssh-auth
    %p.js-ssh-public-key-present{ class: ('collapse' unless ssh_public_key_present) }
      = _('Here is the public SSH key that needs to be added to the remote server. For more information, please refer to the documentation.')
    %p.js-ssh-public-key-pending{ class: ('collapse' if ssh_public_key_present) }
      = _('An SSH key will be automatically generated when the form is submitted. For more information, please refer to the documentation.')

    .clearfix.js-ssh-public-key-wrap{ class: ('collapse' unless ssh_public_key_present) }
      %code.prepend-top-10.ssh-public-key
        = import_data.ssh_public_key
      = clipboard_button(text: import_data.ssh_public_key, title: _("Copy SSH public key to clipboard"), class: 'prepend-top-10 btn-copy-ssh-public-key')

    = button_tag type: 'button',
      data: { endpoint: project_mirror_path(@project, project: { import_data_attributes: regen_data }) },
      class: "btn btn-inverted btn-warning prepend-top-10 js-btn-regenerate-ssh-key#{ ' collapse' unless ssh_public_key_present }" do
      %i.fa.fa-spinner.fa-spin.js-spinner
      = _('Regenerate key')
    = render 'projects/mirrors/pull/regenerate_public_ssh_key_confirm_modal'
