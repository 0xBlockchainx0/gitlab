- pipeline = local_assigns.fetch(:pipeline)
- project = local_assigns.fetch(:project)

- sast_endpoint = pipeline.expose_sast_data? ? sast_artifact_url(pipeline) : nil
- dependency_scanning_endpoint = pipeline.expose_dependency_scanning_data? ? dependency_scanning_artifact_url(pipeline) : nil
- dast_endpoint = pipeline.expose_dast_data? ? dast_artifact_url(pipeline) : nil
- sast_container_endpoint = pipeline.expose_sast_container_data? ? sast_container_artifact_url(pipeline) : pipeline.expose_container_scanning_data? ? container_scanning_artifact_url(pipeline) : nil
- blob_path = project_blob_path(project, pipeline.sha)

- if pipeline.expose_security_dashboard?
  #js-tab-security.build-security.tab-pane
    #js-security-report-app{ data: { head_blob_path: blob_path,
    sast_head_path: sast_endpoint,
    dependency_scanning_head_path: dependency_scanning_endpoint,
    dast_head_path: dast_endpoint,
    sast_container_head_path: sast_container_endpoint,
    pipeline_id: pipeline.id,
    vulnerability_feedback_path: project_vulnerability_feedback_index_path(project),
    vulnerability_feedback_help_path: help_page_path("user/project/merge_requests/index", anchor: "interacting-with-security-reports-ultimate"),
    sast_help_path: help_page_path('user/project/merge_requests/sast'),
    dependency_scanning_help_path: help_page_path('user/project/merge_requests/dependency_scanning'),
    dast_help_path: help_page_path('user/project/merge_requests/dast'),
    sast_container_help_path: help_page_path('user/project/merge_requests/sast_container'),
    can_create_feedback: can?(current_user, :admin_vulnerability_feedback, project).to_s,
    can_create_issue: show_new_issue_link?(project).to_s } }

- if pipeline.expose_license_management_data?
  #js-tab-licenses.tab-pane
    #js-licenses-app{ data: { license_head_path: pipeline.expose_license_management_data? ? license_management_artifact_url(pipeline) : nil,
    api_url: license_management_api_url(project),
    can_manage_licenses: can?(current_user, :admin_software_license_policy, project).to_s } }
