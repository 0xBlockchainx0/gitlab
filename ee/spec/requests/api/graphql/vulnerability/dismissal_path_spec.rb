# frozen_string_literal: true

require 'spec_helper'

describe "Fetching the dismissalPath for vulnerabilities" do
  subject { GitlabSchema.execute(query, context: { current_user: user }).as_json }

  let_it_be(:project) { create(:project) }
  let_it_be(:user) { create(:user) }
  let_it_be(:finding) { create(:vulnerabilities_occurrence) }
  let_it_be(:vulnerability) { create(:vulnerability, findings: [finding], project: project) }

  let_it_be(:query) do
    %(
      query {
        project(fullPath:"#{project.full_path}") {
          vulnerabilities {
            nodes {
              dismissalPath
            }
          }
        }
      }
    )
  end

  before do
    stub_feature_flags(first_class_vulnerabilities: true)
    stub_licensed_features(security_dashboard: true)

    project.add_developer(user)
  end

  it "returns the dismissalPath for each vulnerability" do
    vulnerabilities = subject.dig('data', 'project', 'vulnerabilities', 'nodes')
    path = vulnerabilities.first['dismissalPath']

    expect(path).to eq(
      expose_path(api_v4_vulnerabilities_dismiss_path)
    )
  end
end
