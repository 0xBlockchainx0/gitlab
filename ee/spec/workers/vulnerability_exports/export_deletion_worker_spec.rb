# frozen_string_literal: true

require 'spec_helper'

RSpec.describe VulnerabilityExports::ExportDeletionWorker, type: :worker do
  describe '#perform' do
    let_it_be(:project) { create(:project) }
    let_it_be(:vulnerability_export) { create(:vulnerability_export, :finished, :csv, :with_csv_file, project: project) }

    let(:worker) { described_class.new }

    subject { worker.perform(project.id, vulnerability_export.id) }

    context 'when vulnerability export does not exist' do
      subject { worker.perform(project.id, 9999) }

      it 'does not raise exception' do
        expect { subject }.not_to raise_error
      end

      it 'does not delete any vulnerability export from database' do
        expect { subject }.not_to change { Vulnerabilities::Export.count }
      end
    end

    context 'when vulnerability export exists' do
      context 'when destroy can be performed successfully' do
        it 'destroys vulnerability export' do
          subject
          expect(Vulnerabilities::Export.find_by_id(vulnerability_export.id)).to be_nil
        end
      end

      context 'when destroy fails' do
        before do
          allow_any_instance_of(Vulnerabilities::Export).to receive(:destroy!).and_raise(ActiveRecord::RecordNotFound)
        end

        it 'raises exception' do
          expect { subject }.to raise_error(ActiveRecord::RecordNotFound)
        end
      end
    end
  end
end
